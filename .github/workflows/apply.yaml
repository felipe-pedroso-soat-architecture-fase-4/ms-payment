name: Apply

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  apply:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Scan image
        uses: anchore/scan-action@v3
        with:
          path: "."
          fail-build: true
          severity-cutoff: critical
          output-format: json

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-ms-payment:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/api-ms-payment:latest

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v4

      - name: Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.CLUSTER_NAME }}

      - name: Setup Namespace
        run: kubectl config set-context --current --namespace=order_manager_cluster

      - name: Apply all manifests from k8s directory
        working-directory: k8s/
        run: |
          find . -type f -name "*.yaml" | while read file; do
            echo "Applying $file"
            cat "$file" | envsubst | kubectl apply -f -
          done
        env:
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
            DB_USER: ${{ secrets.DB_USER }}
            DB_NAME: ${{ secrets.DB_NAME }}
            DB_HOST: ${{ secrets.DB_HOST }}
            DB_PORT: ${{ secrets.DB_PORT }}